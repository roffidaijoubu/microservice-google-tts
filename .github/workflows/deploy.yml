name: CI/CD Pipeline for Google TTS Microservice

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t roffidaijoubu/microservice-google-tts:latest .
          docker push roffidaijoubu/microservice-google-tts:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to VPS
        env:
          SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          DOMAIN: ${{ secrets.DOMAIN }}
          TRAEFIK_ACME_EMAIL: ${{ secrets.TRAEFIK_ACME_EMAIL }}
        run: |
          # Set up SSH private key for GitHub Actions
          mkdir -p ~/.ssh
          echo "${SSH_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Add host key verification
          echo "StrictHostKeyChecking no" >> ~/.ssh/config

          # Prepare destination directory
          ssh $VPS_USER@$VPS_HOST "
            mkdir -p /var/www/microservice-google-tts/letsencrypt
          "
          
          # Create environment file
          echo "DOMAIN=${DOMAIN}" > .env
          echo "TRAEFIK_ACME_EMAIL=${TRAEFIK_ACME_EMAIL}" >> .env
          
          # Copy files directly to destination
          scp .env docker-compose.yml $VPS_USER@$VPS_HOST:/var/www/microservice-google-tts/
          
          # Deploy with Traefik check
          ssh $VPS_USER@$VPS_HOST "
            cd /var/www/microservice-google-tts &&
            # Check if Traefik is running
            if docker ps -q -f name=^/traefik$ >/dev/null; then
              echo 'Traefik is already running, skipping Traefik deployment' &&
              # Remove Traefik service from docker-compose
              docker-compose down --remove-orphans &&
              sed -i '/^  traefik:/,/^  [^t]/{/^  [^t]/!d}' docker-compose.yml
            fi &&
            docker-compose pull &&
            docker-compose up -d
          "